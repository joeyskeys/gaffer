import Gaffer
import GafferArnold
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 54, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "imageCataloguePort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'image:catalogue:port', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:name', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:rootDirectory', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Catalogue"] = GafferImage.Catalogue( "Catalogue" )
parent.addChild( __children["Catalogue"] )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_noise3d"] = GafferOSL.OSLShader( "as_noise3d" )
parent.addChild( __children["as_noise3d"] )
__children["as_noise3d"].loadShader( "texture3d/as_noise3d" )
__children["as_noise3d"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["mx_smoothstep_float"] = GafferOSL.OSLShader( "mx_smoothstep_float" )
parent.addChild( __children["mx_smoothstep_float"] )
__children["mx_smoothstep_float"].loadShader( "MaterialX/mx_smoothstep_float" )
__children["mx_smoothstep_float"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_color_mix"] = GafferOSL.OSLShader( "as_color_mix" )
parent.addChild( __children["as_color_mix"] )
__children["as_color_mix"].loadShader( "color/as_color_mix" )
__children["as_color_mix"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CowShader"] = GafferArnold.ArnoldShader( "CowShader" )
parent.addChild( __children["CowShader"] )
__children["CowShader"].loadShader( "standard_surface" )
__children["CowShader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment_cows"] = GafferScene.ShaderAssignment( "ShaderAssignment_cows" )
parent.addChild( __children["ShaderAssignment_cows"] )
__children["ShaderAssignment_cows"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InteractiveArnoldRender"] = GafferArnold.InteractiveArnoldRender( "InteractiveArnoldRender" )
parent.addChild( __children["InteractiveArnoldRender"] )
__children["InteractiveArnoldRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["user_data_rgb_readColour"] = GafferArnold.ArnoldShader( "user_data_rgb_readColour" )
parent.addChild( __children["user_data_rgb_readColour"] )
__children["user_data_rgb_readColour"].loadShader( "user_data_rgb" )
__children["user_data_rgb_readColour"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CustomAttributes_hideColour"] = GafferScene.CustomAttributes( "CustomAttributes_hideColour" )
parent.addChild( __children["CustomAttributes_hideColour"] )
__children["CustomAttributes_hideColour"]["attributes"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "member1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CustomAttributes_hideColour"]["attributes"]["member1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CustomAttributes_hideColour"]["attributes"]["member1"].addChild( Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CustomAttributes_hideColour"]["attributes"]["member1"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CustomAttributes_hideColour"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Random_color"] = Gaffer.Random( "Random_color" )
parent.addChild( __children["Random_color"] )
__children["Random_color"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter4"] = GafferScene.PathFilter( "PathFilter4" )
parent.addChild( __children["PathFilter4"] )
__children["PathFilter4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"] = Gaffer.Box( "Other_Shaders_and_Render_Setup" )
parent.addChild( __children["Other_Shaders_and_Render_Setup"] )
__children["Other_Shaders_and_Render_Setup"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["Other_Shaders_and_Render_Setup"]["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["Other_Shaders_and_Render_Setup"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Other_Shaders_and_Render_Setup"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Other_Shaders_and_Render_Setup"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment_ground" ) )
__children["Other_Shaders_and_Render_Setup"]["ShaderAssignment_ground"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"].addChild( GafferScene.PathFilter( "PathFilter3" ) )
__children["Other_Shaders_and_Render_Setup"]["PathFilter3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"].addChild( GafferArnold.ArnoldShader( "GrassShader" ) )
__children["Other_Shaders_and_Render_Setup"]["GrassShader"].loadShader( "standard_surface" )
__children["Other_Shaders_and_Render_Setup"]["GrassShader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"].addChild( GafferScene.Outputs( "Outputs" ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "remoteDisplayType", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["parameters"]["remoteDisplayType"].addChild( Gaffer.StringPlug( "name", defaultValue = 'remoteDisplayType', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["parameters"]["remoteDisplayType"].addChild( Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "displayHost", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["parameters"]["displayHost"].addChild( Gaffer.StringPlug( "name", defaultValue = 'displayHost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["parameters"]["displayHost"].addChild( Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "driverType", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["parameters"]["driverType"].addChild( Gaffer.StringPlug( "name", defaultValue = 'driverType', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["parameters"]["driverType"].addChild( Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "displayPort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["parameters"]["displayPort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'displayPort', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["parameters"]["displayPort"].addChild( Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "quantize", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["parameters"]["quantize"].addChild( Gaffer.StringPlug( "name", defaultValue = 'quantize', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["parameters"]["quantize"].addChild( Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"].addChild( GafferScene.StandardOptions( "StandardOptions" ) )
__children["Other_Shaders_and_Render_Setup"]["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Other_Shaders_and_Render_Setup"].addChild( GafferArnold.ArnoldOptions( "ArnoldOptions" ) )
__children["Other_Shaders_and_Render_Setup"]["ArnoldOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"] = Gaffer.Backdrop( "Backdrop2" )
parent.addChild( __children["Backdrop2"] )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AttributeVisualiser"] = GafferScene.AttributeVisualiser( "AttributeVisualiser" )
parent.addChild( __children["AttributeVisualiser"] )
__children["AttributeVisualiser"]["ramp"].clearPoints()
__children["AttributeVisualiser"]["ramp"].addChild( Gaffer.ValuePlug( "p0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AttributeVisualiser"]["ramp"]["p0"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AttributeVisualiser"]["ramp"]["p0"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AttributeVisualiser"]["ramp"].addChild( Gaffer.ValuePlug( "p1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AttributeVisualiser"]["ramp"]["p1"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AttributeVisualiser"]["ramp"]["p1"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AttributeVisualiser"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"] = Gaffer.Backdrop( "Backdrop3" )
parent.addChild( __children["Backdrop3"] )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"] = Gaffer.Box( "Scene" )
parent.addChild( __children["Scene"] )
__children["Scene"].addChild( GafferScene.Camera( "Camera" ) )
__children["Scene"]["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.Plane( "GroundPlane1" ) )
__children["Scene"]["GroundPlane1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.Group( "Group" ) )
__children["Scene"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferArnold.ArnoldShader( "physical_sky" ) )
__children["Scene"]["physical_sky"].loadShader( "physical_sky" )
__children["Scene"]["physical_sky"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferArnold.ArnoldLight( "skydome_light" ) )
__children["Scene"]["skydome_light"].loadShader( "skydome_light" )
__children["Scene"]["skydome_light"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( Gaffer.Box( "Cow_Field" ) )
__children["Scene"]["Cow_Field"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( GafferScene.SceneReader( "SceneReader_Cows" ) )
__children["Scene"]["Cow_Field"]["SceneReader_Cows"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( GafferScene.Instancer( "Instancer" ) )
__children["Scene"]["Cow_Field"]["Instancer"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( GafferScene.Plane( "InstanceSourcePlane" ) )
__children["Scene"]["Cow_Field"]["InstanceSourcePlane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( GafferScene.SubTree( "SubTree" ) )
__children["Scene"]["Cow_Field"]["SubTree"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( GafferScene.FreezeTransform( "FreezeTransform" ) )
__children["Scene"]["Cow_Field"]["FreezeTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( GafferScene.PathFilter( "PathFilter6" ) )
__children["Scene"]["Cow_Field"]["PathFilter6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( Gaffer.Backdrop( "Backdrop" ) )
__children["Scene"]["Cow_Field"]["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"]["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"]["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( Gaffer.Backdrop( "Backdrop1" ) )
__children["Scene"]["Cow_Field"]["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"]["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"]["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( GafferScene.Transform( "Transform" ) )
__children["Scene"]["Cow_Field"]["Transform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( GafferScene.PathFilter( "PathFilter4" ) )
__children["Scene"]["Cow_Field"]["PathFilter4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( Gaffer.Random( "randomizeRotation" ) )
__children["Scene"]["Cow_Field"]["randomizeRotation"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( Gaffer.Random( "randomizeZ" ) )
__children["Scene"]["Cow_Field"]["randomizeZ"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( Gaffer.Random( "randomizeX" ) )
__children["Scene"]["Cow_Field"]["randomizeX"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( Gaffer.Backdrop( "Backdrop3" ) )
__children["Scene"]["Cow_Field"]["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"]["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"]["Backdrop3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( Gaffer.Expression( "Expression" ) )
__children["Scene"]["Cow_Field"]["Expression"]["__in"].addChild( Gaffer.V2fPlug( "p0", defaultValue = imath.V2f( 0, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"]["Expression"]["__out"].addChild( Gaffer.V2fPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V2f( 0, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Scene"]["Cow_Field"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Scene"]["Cow_Field"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Cow_Field"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Scene"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Scene"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Goal"] = Gaffer.Backdrop( "Goal" )
parent.addChild( __children["Goal"] )
__children["Goal"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Goal"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Goal"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Goal"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter5"] = GafferScene.PathFilter( "PathFilter5" )
parent.addChild( __children["PathFilter5"] )
__children["PathFilter5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"] = Gaffer.Backdrop( "Backdrop4" )
parent.addChild( __children["Backdrop4"] )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"] = Gaffer.Backdrop( "Backdrop5" )
parent.addChild( __children["Backdrop5"] )
__children["Backdrop5"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frame"].setValue( 47.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 61550 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( __children["Catalogue"]["images"]["Image"], 'image:index', 0 )
__children["Catalogue"]["images"]["Image"]["fileName"].setValue( '/Users/tom/gaffer/projects/default/catalogues/tutorial/bbb7a556642665ea6d30df046f0a3cbc.exr' )
Gaffer.Metadata.registerValue( __children["Catalogue"]["images"]["Image1"], 'image:index', 1 )
__children["Catalogue"]["images"]["Image1"]["fileName"].setValue( '/Users/tom/gaffer/projects/default/catalogues/shaderVariation/cb2a65c76d27ca02ec8f052599566128.exr' )
Gaffer.Metadata.registerValue( __children["Catalogue"]["images"]["Image2"], 'image:index', 2 )
__children["Catalogue"]["images"]["Image2"]["fileName"].setValue( '/Users/tom/gaffer/projects/default/catalogues/shaderVariation/db977a5462f5198a2cb8a3cd4bcd5af8.exr' )
Gaffer.Metadata.registerValue( __children["Catalogue"]["images"]["Image3"], 'image:index', 3 )
__children["Catalogue"]["images"]["Image3"]["fileName"].setValue( '/Users/tom/gaffer/projects/default/catalogues/shaderVariation/37d10beb8b320b70f1c7c2d6532e5526.exr' )
Gaffer.Metadata.registerValue( __children["Catalogue"]["images"]["Image4"], 'image:index', 4 )
__children["Catalogue"]["images"]["Image4"]["fileName"].setValue( '/Users/tom/gaffer/projects/default/catalogues/shaderVariation/bf681c95da550495fc83bb7308cec6e9.exr' )
__children["Catalogue"]["images"]["Image5"]["fileName"].setValue( '/Users/tom/gaffer/projects/default/catalogues/shaderVariation/23e68f749bf1f6288eef1b9b5da65809.exr' )
__children["Catalogue"]["images"]["Image6"]["fileName"].setValue( '/Users/tom/gaffer/projects/default/catalogues/perLocationShaderVariationArnold/3e98fcc24a98f94f2835155ef2e93bc6.exr' )
__children["Catalogue"]["imageIndex"].setValue( 6 )
__children["Catalogue"]["directory"].setValue( '${project:rootDirectory}/catalogues/${script:name}' )
__children["Catalogue"]["__mapping"].setValue( IECore.CompoundData({'Image3':IECore.IntData( 3 ),'Image5':IECore.IntData( 5 ),'Image4':IECore.IntData( 4 ),'Image2':IECore.IntData( 2 ),'Image':IECore.IntData( 0 ),'Image1':IECore.IntData( 1 ),'Image6':IECore.IntData( 6 )}) )
__children["Catalogue"]["__uiPosition"].setValue( imath.V2f( -50.7669296, -76.3563004 ) )
__children["as_noise3d"]["parameters"]["Frequency"].setValue( imath.V3f( 2, 2, 2 ) )
__children["as_noise3d"]["__uiPosition"].setValue( imath.V2f( -116.210739, -41.139904 ) )
__children["mx_smoothstep_float"]["parameters"]["in"].setInput( __children["as_noise3d"]["out"]["FloatOut"] )
__children["mx_smoothstep_float"]["parameters"]["low"].setValue( 0.20000000298023224 )
__children["mx_smoothstep_float"]["parameters"]["high"].setValue( 0.20000000298023224 )
__children["mx_smoothstep_float"]["__uiPosition"].setValue( imath.V2f( -100.242233, -41.139904 ) )
__children["as_color_mix"]["parameters"]["Color1"].setInput( __children["user_data_rgb_readColour"]["out"] )
__children["as_color_mix"]["parameters"]["Color1"]["r"].setInput( __children["user_data_rgb_readColour"]["out"]["r"] )
__children["as_color_mix"]["parameters"]["Color1"]["g"].setInput( __children["user_data_rgb_readColour"]["out"]["g"] )
__children["as_color_mix"]["parameters"]["Color1"]["b"].setInput( __children["user_data_rgb_readColour"]["out"]["b"] )
__children["as_color_mix"]["parameters"]["Color2"].setValue( imath.Color3f( 0.829999983, 0.829999983, 0.829999983 ) )
__children["as_color_mix"]["parameters"]["Factor"].setInput( __children["mx_smoothstep_float"]["out"]["out"] )
__children["as_color_mix"]["__uiPosition"].setValue( imath.V2f( -83.7864227, -36.1893425 ) )
__children["CowShader"]["parameters"]["base_color"].setInput( __children["as_color_mix"]["out"]["ColorOut"] )
__children["CowShader"]["parameters"]["base_color"]["r"].setInput( __children["as_color_mix"]["out"]["ColorOut"]["r"] )
__children["CowShader"]["parameters"]["base_color"]["g"].setInput( __children["as_color_mix"]["out"]["ColorOut"]["g"] )
__children["CowShader"]["parameters"]["base_color"]["b"].setInput( __children["as_color_mix"]["out"]["ColorOut"]["b"] )
__children["CowShader"]["__uiPosition"].setValue( imath.V2f( -70.1211395, -40.9893379 ) )
__children["ShaderAssignment_cows"]["in"].setInput( __children["Dot"]["out"] )
__children["ShaderAssignment_cows"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["ShaderAssignment_cows"]["shader"].setInput( __children["CowShader"]["out"] )
__children["ShaderAssignment_cows"]["__uiPosition"].setValue( imath.V2f( -51.0558319, -40.9893379 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/world/cow/*' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( -37.5666618, -32.9403458 ) )
__children["InteractiveArnoldRender"]["in"].setInput( __children["Other_Shaders_and_Render_Setup"]["out"] )
__children["InteractiveArnoldRender"]["__uiPosition"].setValue( imath.V2f( -51.0558319, -67.1949158 ) )
__children["user_data_rgb_readColour"]["parameters"]["attribute"].setValue( 'user:colorVariation' )
__children["user_data_rgb_readColour"]["__uiPosition"].setValue( imath.V2f( -108.897186, -24.2910194 ) )
Gaffer.Metadata.registerValue( __children["Backdrop"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.360000014 ) )
__children["Backdrop"]["title"].setValue( 'Reading the Colour in' )
__children["Backdrop"]["description"].setValue( "The 'user_data_rgb' shading node can be used to read in a locations Attributes at render time. There are versions of this node for all common data types.\n\nAll that is needed here is to match the name of the attribute to the one created by the CustomAttributes node." )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -11.791748, -13.8779392 ), imath.V2f( 42.7195969, 11.0820312 ) ) )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( -111.24025, -15.1080914 ) )
__children["CustomAttributes_hideColour"]["in"].setInput( __children["Scene"]["out"] )
__children["CustomAttributes_hideColour"]["filter"].setInput( __children["PathFilter4"]["out"] )
__children["CustomAttributes_hideColour"]["attributes"]["member1"]["name"].setValue( 'user:colorVariation' )
__children["CustomAttributes_hideColour"]["attributes"]["member1"]["value"].setInput( __children["Random_color"]["outColor"] )
__children["CustomAttributes_hideColour"]["attributes"]["member1"]["value"]["r"].setInput( __children["Random_color"]["outColor"]["r"] )
__children["CustomAttributes_hideColour"]["attributes"]["member1"]["value"]["g"].setInput( __children["Random_color"]["outColor"]["g"] )
__children["CustomAttributes_hideColour"]["attributes"]["member1"]["value"]["b"].setInput( __children["Random_color"]["outColor"]["b"] )
__children["CustomAttributes_hideColour"]["__uiPosition"].setValue( imath.V2f( -51.0518265, 25.1788807 ) )
__children["Random_color"]["contextEntry"].setValue( 'scene:path' )
__children["Random_color"]["baseColor"].setValue( imath.Color3f( 0.100000001, 0.0500000007, 0.0500000007 ) )
__children["Random_color"]["hue"].setValue( 0.5 )
__children["Random_color"]["value"].setValue( 0.10000000149011612 )
__children["Random_color"]["__uiPosition"].setValue( imath.V2f( -64.4071121, 25.2104912 ) )
Gaffer.Metadata.registerValue( __children["Backdrop1"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.359999985 ) )
__children["Backdrop1"]["title"].setValue( '' )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -38.5993881 ), imath.V2f( 86.9783325, 9.48580933 ) ) )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( -113.089149, 38.378643 ) )
__children["PathFilter4"]["paths"].setValue( IECore.StringVectorData( [ '/world/cow/*' ] ) )
__children["PathFilter4"]["__uiPosition"].setValue( imath.V2f( -36.306469, 31.8555126 ) )
__children["Other_Shaders_and_Render_Setup"]["__uiPosition"].setValue( imath.V2f( -49.5558319, -58.8628845 ) )
__children["Other_Shaders_and_Render_Setup"]["BoxIn"]["__in"].setInput( __children["Other_Shaders_and_Render_Setup"]["in"] )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["BoxIn"]["__in"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["Other_Shaders_and_Render_Setup"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( 0.793976367, 56.8879089 ) )
__children["Other_Shaders_and_Render_Setup"]["in"].setInput( __children["ShaderAssignment_cows"]["out"] )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["in"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["in"], 'noduleLayout:section', 'top' )
__children["Other_Shaders_and_Render_Setup"]["BoxOut"]["in"].setInput( __children["Other_Shaders_and_Render_Setup"]["ArnoldOptions"]["out"] )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["BoxOut"]["__out"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["BoxOut"]["__out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["BoxOut"]["__out"], 'noduleLayout:spacing', 2.0 )
__children["Other_Shaders_and_Render_Setup"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 2.29397631, 0.190315247 ) )
__children["Other_Shaders_and_Render_Setup"]["out"].setInput( __children["Other_Shaders_and_Render_Setup"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["out"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["out"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["Other_Shaders_and_Render_Setup"]["out"], 'noduleLayout:section', 'bottom' )
__children["Other_Shaders_and_Render_Setup"]["ShaderAssignment_ground"]["in"].setInput( __children["Other_Shaders_and_Render_Setup"]["BoxIn"]["out"] )
__children["Other_Shaders_and_Render_Setup"]["ShaderAssignment_ground"]["filter"].setInput( __children["Other_Shaders_and_Render_Setup"]["PathFilter3"]["out"] )
__children["Other_Shaders_and_Render_Setup"]["ShaderAssignment_ground"]["shader"].setInput( __children["Other_Shaders_and_Render_Setup"]["GrassShader"]["out"] )
__children["Other_Shaders_and_Render_Setup"]["ShaderAssignment_ground"]["__uiPosition"].setValue( imath.V2f( 0.793976426, 43.2797699 ) )
__children["Other_Shaders_and_Render_Setup"]["PathFilter3"]["paths"].setValue( IECore.StringVectorData( [ '/world/ground' ] ) )
__children["Other_Shaders_and_Render_Setup"]["PathFilter3"]["__uiPosition"].setValue( imath.V2f( 14.3323841, 48.8471031 ) )
__children["Other_Shaders_and_Render_Setup"]["GrassShader"]["parameters"]["base_color"].setValue( imath.Color3f( 0.0345000066, 0.119999997, 0.0299999993 ) )
__children["Other_Shaders_and_Render_Setup"]["GrassShader"]["parameters"]["specular"].setValue( 0.0 )
__children["Other_Shaders_and_Render_Setup"]["GrassShader"]["__uiPosition"].setValue( imath.V2f( -20.1758461, 43.2797699 ) )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["in"].setInput( __children["Other_Shaders_and_Render_Setup"]["StandardOptions"]["out"] )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["name"].setValue( 'Interactive/Beauty' )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["fileName"].setValue( 'beauty' )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["type"].setValue( 'ieDisplay' )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["Other_Shaders_and_Render_Setup"]["Outputs"]["__uiPosition"].setValue( imath.V2f( 0.793976307, 19.9478645 ) )
__children["Other_Shaders_and_Render_Setup"]["StandardOptions"]["in"].setInput( __children["Other_Shaders_and_Render_Setup"]["ShaderAssignment_ground"]["out"] )
__children["Other_Shaders_and_Render_Setup"]["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/world/camera' )
__children["Other_Shaders_and_Render_Setup"]["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["Other_Shaders_and_Render_Setup"]["StandardOptions"]["options"]["renderResolution"]["value"].setValue( imath.V2i( 1024, 1024 ) )
__children["Other_Shaders_and_Render_Setup"]["StandardOptions"]["options"]["renderResolution"]["enabled"].setValue( True )
__children["Other_Shaders_and_Render_Setup"]["StandardOptions"]["__uiPosition"].setValue( imath.V2f( 0.797981739, 26.4575691 ) )
__children["Other_Shaders_and_Render_Setup"]["ArnoldOptions"]["in"].setInput( __children["Other_Shaders_and_Render_Setup"]["Outputs"]["out"] )
__children["Other_Shaders_and_Render_Setup"]["ArnoldOptions"]["options"]["aaSamples"]["value"].setValue( 16 )
__children["Other_Shaders_and_Render_Setup"]["ArnoldOptions"]["options"]["aaSamples"]["enabled"].setValue( True )
__children["Other_Shaders_and_Render_Setup"]["ArnoldOptions"]["__uiPosition"].setValue( imath.V2f( 0.793976307, 14.283802 ) )
Gaffer.Metadata.registerValue( __children["Backdrop2"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.360000014 ) )
__children["Backdrop2"]["title"].setValue( 'NOTES' )
__children["Backdrop2"]["description"].setValue( "- Because the location's Attributes are read at render time. There is no need to have the CustomAttributes node before the Shader Assignment.  As long as they are present by the time it is rendered! This allows some flexibility in the order of operations in your pipeline.\n\n- Only Attributes with the 'user:' prefix will be translated to the renderer." )
__children["Backdrop2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -8.98313904, 7.45973206 ), imath.V2f( 42.848011, 28.0001316 ) ) )
__children["Backdrop2"]["__uiPosition"].setValue( imath.V2f( -111.065399, -81.6122589 ) )
__children["AttributeVisualiser"]["in"].setInput( __children["Dot"]["out"] )
__children["AttributeVisualiser"]["filter"].setInput( __children["PathFilter5"]["out"] )
__children["AttributeVisualiser"]["attributeName"].setValue( 'user:colorVariation' )
__children["AttributeVisualiser"]["ramp"]["p0"]["y"].setValue( imath.Color3f( 1, 0, 0 ) )
__children["AttributeVisualiser"]["ramp"]["p1"]["x"].setValue( 1.0 )
__children["AttributeVisualiser"]["ramp"]["p1"]["y"].setValue( imath.Color3f( 0, 1, 0 ) )
__children["AttributeVisualiser"]["__uiPosition"].setValue( imath.V2f( -35.0755615, -17.6140671 ) )
__children["Dot"]["in"].setInput( __children["CustomAttributes_hideColour"]["out"] )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( -51.0518265, -10.2820349 ) )
Gaffer.Metadata.registerValue( __children["Backdrop3"], 'nodeGadget:color', imath.Color3f( 0.400000006, 0.360000014, 0.360000014 ) )
__children["Backdrop3"]["title"].setValue( '' )
__children["Backdrop3"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -18.829668, -7.12954807 ), imath.V2f( 33.5210648, 10.5616188 ) ) )
__children["Backdrop3"]["__uiPosition"].setValue( imath.V2f( -26.6455822, -16.5875797 ) )
__children["Scene"]["Camera"]["transform"]["translate"].setValue( imath.V3f( 11.3540936, 20.0672684, 15.6733675 ) )
__children["Scene"]["Camera"]["transform"]["rotate"].setValue( imath.V3f( 77.5772858, 86.1261597, 145.680573 ) )
__children["Scene"]["Camera"]["fieldOfView"].setValue( 90.0 )
__children["Scene"]["Camera"]["__uiPosition"].setValue( imath.V2f( -47.5090446, 80.6402206 ) )
__children["Scene"]["GroundPlane1"]["name"].setValue( 'ground' )
__children["Scene"]["GroundPlane1"]["transform"]["rotate"].setValue( imath.V3f( -90, 0, 0 ) )
__children["Scene"]["GroundPlane1"]["dimensions"].setValue( imath.V2f( 100, 100 ) )
__children["Scene"]["GroundPlane1"]["__uiPosition"].setValue( imath.V2f( -57.1448402, 73.2975235 ) )
__children["Scene"]["Group"]["in"]["in0"].setInput( __children["Scene"]["Cow_Field"]["out"] )
__children["Scene"]["Group"]["in"]["in1"].setInput( __children["Scene"]["GroundPlane1"]["out"] )
__children["Scene"]["Group"]["in"]["in2"].setInput( __children["Scene"]["Camera"]["out"] )
__children["Scene"]["Group"]["in"]["in3"].setInput( __children["Scene"]["skydome_light"]["out"] )
__children["Scene"]["Group"]["name"].setValue( 'world' )
__children["Scene"]["Group"]["__uiPosition"].setValue( imath.V2f( -51.0518265, 53.0469971 ) )
__children["Scene"]["out"].setInput( __children["Scene"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Scene"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Scene"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Scene"]["out"], 'description', 'The processed output scene.' )
__children["Scene"]["physical_sky"]["parameters"]["turbidity"].setValue( 10.0 )
__children["Scene"]["physical_sky"]["parameters"]["elevation"].setValue( 25.0 )
__children["Scene"]["physical_sky"]["parameters"]["sun_size"].setValue( 2.0 )
__children["Scene"]["physical_sky"]["parameters"]["sky_tint"].setValue( imath.Color3f( 1, 0.804499984, 0.425000012 ) )
__children["Scene"]["physical_sky"]["parameters"]["intensity"].setValue( 4.0 )
__children["Scene"]["physical_sky"]["__uiPosition"].setValue( imath.V2f( -37.5226669, 72.2347488 ) )
__children["Scene"]["skydome_light"]["parameters"]["color"].setInput( __children["Scene"]["physical_sky"]["out"] )
__children["Scene"]["skydome_light"]["parameters"]["color"]["r"].setInput( __children["Scene"]["physical_sky"]["out"]["r"] )
__children["Scene"]["skydome_light"]["parameters"]["color"]["g"].setInput( __children["Scene"]["physical_sky"]["out"]["g"] )
__children["Scene"]["skydome_light"]["parameters"]["color"]["b"].setInput( __children["Scene"]["physical_sky"]["out"]["b"] )
__children["Scene"]["skydome_light"]["__uiPosition"].setValue( imath.V2f( -37.8227844, 67.7428513 ) )
Gaffer.Metadata.registerValue( __children["Scene"]["Cow_Field"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["Scene"]["Cow_Field"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
__children["Scene"]["Cow_Field"]["__uiPosition"].setValue( imath.V2f( -64.3224106, 65.2398529 ) )
__children["Scene"]["Cow_Field"]["SceneReader_Cows"]["fileName"].setValue( '${GAFFER_ROOT}/resources/cow/cow.scc' )
__children["Scene"]["Cow_Field"]["SceneReader_Cows"]["transform"]["scale"].setValue( imath.V3f( 0.100000001, 0.100000001, 0.100000001 ) )
__children["Scene"]["Cow_Field"]["SceneReader_Cows"]["__uiPosition"].setValue( imath.V2f( -2.60074711, 18.2161522 ) )
__children["Scene"]["Cow_Field"]["Instancer"]["in"].setInput( __children["Scene"]["Cow_Field"]["FreezeTransform"]["out"] )
__children["Scene"]["Cow_Field"]["Instancer"]["parent"].setValue( '/instancePlane' )
__children["Scene"]["Cow_Field"]["Instancer"]["instances"].setInput( __children["Scene"]["Cow_Field"]["SceneReader_Cows"]["out"] )
__children["Scene"]["Cow_Field"]["Instancer"]["__uiPosition"].setValue( imath.V2f( -15.7570734, 10.0520897 ) )
__children["Scene"]["Cow_Field"]["InstanceSourcePlane"]["name"].setValue( 'instancePlane' )
__children["Scene"]["Cow_Field"]["InstanceSourcePlane"]["transform"]["translate"].setValue( imath.V3f( 0, 0, 15.3947353 ) )
__children["Scene"]["Cow_Field"]["InstanceSourcePlane"]["transform"]["rotate"].setValue( imath.V3f( 90, 0, 0 ) )
__children["Scene"]["Cow_Field"]["InstanceSourcePlane"]["dimensions"].setValue( imath.V2f( 75, 75 ) )
__children["Scene"]["Cow_Field"]["InstanceSourcePlane"]["divisions"].setValue( imath.V2i( 20, 20 ) )
__children["Scene"]["Cow_Field"]["InstanceSourcePlane"]["__uiPosition"].setValue( imath.V2f( -17.2570724, 44.8787384 ) )
__children["Scene"]["Cow_Field"]["SubTree"]["in"].setInput( __children["Scene"]["Cow_Field"]["Instancer"]["out"] )
__children["Scene"]["Cow_Field"]["SubTree"]["root"].setValue( '/instancePlane/instances/cow' )
__children["Scene"]["Cow_Field"]["SubTree"]["includeRoot"].setValue( True )
__children["Scene"]["Cow_Field"]["SubTree"]["__uiPosition"].setValue( imath.V2f( -15.7570734, 4.38802719 ) )
__children["Scene"]["Cow_Field"]["FreezeTransform"]["in"].setInput( __children["Scene"]["Cow_Field"]["InstanceSourcePlane"]["out"] )
__children["Scene"]["Cow_Field"]["FreezeTransform"]["filter"].setInput( __children["Scene"]["Cow_Field"]["PathFilter6"]["out"] )
__children["Scene"]["Cow_Field"]["FreezeTransform"]["__uiPosition"].setValue( imath.V2f( -17.2570724, 39.2146759 ) )
__children["Scene"]["Cow_Field"]["PathFilter6"]["paths"].setValue( IECore.StringVectorData( [ '/instancePlane' ] ) )
__children["Scene"]["Cow_Field"]["PathFilter6"]["__uiPosition"].setValue( imath.V2f( -3.15497684, 44.7654877 ) )
__children["Scene"]["Cow_Field"]["Backdrop"]["title"].setValue( 'Source Plane' )
__children["Scene"]["Cow_Field"]["Backdrop"]["description"].setValue( 'Freezing the transformation to a horizontal plane before instancing makes life a lot easier.' )
__children["Scene"]["Cow_Field"]["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 33.9298286, 15.6410065 ) ) )
__children["Scene"]["Cow_Field"]["Backdrop"]["__uiPosition"].setValue( imath.V2f( -23.8311081, 44.4343719 ) )
__children["Scene"]["Cow_Field"]["Backdrop1"]["title"].setValue( 'Instance Cows' )
__children["Scene"]["Cow_Field"]["Backdrop1"]["description"].setValue( 'We use the Subtree node to remove the source plane and other intermediate locations.' )
__children["Scene"]["Cow_Field"]["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -22.65942 ), imath.V2f( 34.1670914, 10 ) ) )
__children["Scene"]["Cow_Field"]["Backdrop1"]["__uiPosition"].setValue( imath.V2f( -24.0090561, 22.3681107 ) )
__children["Scene"]["Cow_Field"]["Transform"]["in"].setInput( __children["Scene"]["Cow_Field"]["SubTree"]["out"] )
__children["Scene"]["Cow_Field"]["Transform"]["filter"].setInput( __children["Scene"]["Cow_Field"]["PathFilter4"]["out"] )
__children["Scene"]["Cow_Field"]["Transform"]["transform"]["translate"]["x"].setInput( __children["Scene"]["Cow_Field"]["randomizeZ"]["outFloat"] )
__children["Scene"]["Cow_Field"]["Transform"]["transform"]["translate"]["z"].setInput( __children["Scene"]["Cow_Field"]["randomizeX"]["outFloat"] )
__children["Scene"]["Cow_Field"]["Transform"]["transform"]["rotate"]["y"].setInput( __children["Scene"]["Cow_Field"]["randomizeRotation"]["outFloat"] )
__children["Scene"]["Cow_Field"]["Transform"]["__uiPosition"].setValue( imath.V2f( -15.7570734, -21.3598938 ) )
__children["Scene"]["Cow_Field"]["PathFilter4"]["paths"].setValue( IECore.StringVectorData( [ '/cow/*' ] ) )
__children["Scene"]["Cow_Field"]["PathFilter4"]["__uiPosition"].setValue( imath.V2f( -1.46225071, -16.8778172 ) )
__children["Scene"]["Cow_Field"]["randomizeRotation"]["contextEntry"].setValue( 'scene:path' )
__children["Scene"]["Cow_Field"]["randomizeRotation"]["floatRange"].setValue( imath.V2f( -180, 180 ) )
__children["Scene"]["Cow_Field"]["randomizeRotation"]["__uiPosition"].setValue( imath.V2f( -27.4238281, -24.6581326 ) )
__children["Scene"]["Cow_Field"]["randomizeZ"]["seed"].setValue( 7 )
__children["Scene"]["Cow_Field"]["randomizeZ"]["contextEntry"].setValue( 'scene:path' )
__children["Scene"]["Cow_Field"]["randomizeZ"]["floatRange"].setInput( __children["Scene"]["Cow_Field"]["Expression"]["__out"]["p0"] )
__children["Scene"]["Cow_Field"]["randomizeZ"]["floatRange"]["x"].setInput( __children["Scene"]["Cow_Field"]["Expression"]["__out"]["p0"]["x"] )
__children["Scene"]["Cow_Field"]["randomizeZ"]["floatRange"]["y"].setInput( __children["Scene"]["Cow_Field"]["Expression"]["__out"]["p0"]["y"] )
__children["Scene"]["Cow_Field"]["randomizeZ"]["__uiPosition"].setValue( imath.V2f( -27.3572159, -21.1468506 ) )
__children["Scene"]["Cow_Field"]["randomizeX"]["seed"].setValue( 11 )
__children["Scene"]["Cow_Field"]["randomizeX"]["contextEntry"].setValue( 'scene:path' )
__children["Scene"]["Cow_Field"]["randomizeX"]["floatRange"].setValue( imath.V2f( -20, 20 ) )
__children["Scene"]["Cow_Field"]["randomizeX"]["__uiPosition"].setValue( imath.V2f( -27.4259262, -17.144928 ) )
__children["Scene"]["Cow_Field"]["Backdrop3"]["title"].setValue( 'Randomise' )
__children["Scene"]["Cow_Field"]["Backdrop3"]["description"].setValue( 'We use right-click > Randomise to vary the rotation and position of each cow.' )
__children["Scene"]["Cow_Field"]["Backdrop3"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -8.5, -15.0433674 ), imath.V2f( 35.7571335, 10.5407867 ) ) )
__children["Scene"]["Cow_Field"]["Backdrop3"]["__uiPosition"].setValue( imath.V2f( -25.3480759, -13.0320148 ) )
__children["Scene"]["Cow_Field"]["Expression"]["__in"]["p0"].setInput( __children["Scene"]["Cow_Field"]["randomizeX"]["floatRange"] )
__children["Scene"]["Cow_Field"]["Expression"]["__in"]["p0"]["x"].setInput( __children["Scene"]["Cow_Field"]["randomizeX"]["floatRange"]["x"] )
__children["Scene"]["Cow_Field"]["Expression"]["__in"]["p0"]["y"].setInput( __children["Scene"]["Cow_Field"]["randomizeX"]["floatRange"]["y"] )
__children["Scene"]["Cow_Field"]["Expression"]["__uiPosition"].setValue( imath.V2f( -30.3148041, -19.0660019 ) )
__children["Scene"]["Cow_Field"]["BoxOut"]["in"].setInput( __children["Scene"]["Cow_Field"]["Transform"]["out"] )
Gaffer.Metadata.registerValue( __children["Scene"]["Cow_Field"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Scene"]["Cow_Field"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Scene"]["Cow_Field"]["BoxOut"]["__out"], 'description', 'The output scene.' )
__children["Scene"]["Cow_Field"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -15.7570734, -33.9992256 ) )
__children["Scene"]["Cow_Field"]["out"].setInput( __children["Scene"]["Cow_Field"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Scene"]["Cow_Field"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Scene"]["Cow_Field"]["out"], 'description', 'The output scene.' )
Gaffer.Metadata.registerValue( __children["Scene"]["Cow_Field"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Scene"]["Cow_Field"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["Scene"]["Cow_Field"]["out"], 'layout:index', 0 )
__children["Scene"]["BoxOut"]["in"].setInput( __children["Scene"]["Group"]["out"] )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["Scene"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -49.5511169, 44.7148132 ) )
__children["Scene"]["__uiPosition"].setValue( imath.V2f( -49.5518265, 56.3805771 ) )
__children["Goal"]["title"].setValue( 'Shader Variation' )
__children["Goal"]["scale"].setValue( 1.5 )
__children["Goal"]["description"].setValue( 'Demonstrates how to use CustomAttributes to create per-location shading variation.' )
__children["Goal"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -11.9364967 ), imath.V2f( 43.4152222, 9.43624878 ) ) )
__children["Goal"]["__uiPosition"].setValue( imath.V2f( -112.408882, 63.8620682 ) )
__children["PathFilter5"]["paths"].setValue( IECore.StringVectorData( [ '...' ] ) )
__children["PathFilter5"]["__uiPosition"].setValue( imath.V2f( -26.5978985, -10.8906269 ) )
Gaffer.Metadata.registerValue( __children["Backdrop4"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.359999985 ) )
__children["Backdrop4"]["title"].setValue( 'Per-location Variation' )
__children["Backdrop4"]["description"].setValue( 'Per-object variation can be achieved by using the CustomAttributes node and reading the resulting data into a shader at render time.\n\nIn this example, we make use of Gaffer\'s built-in Random node.\n\nFirst, add a custom Color3f attribute by clicking \'+\' in the CustomAtributes node. It is important that it has the \'user:\' prefix or it won\'t make it to the renderer. Then right-click the color swatch at the end next to the three fields and choose \'Randomise...\'\n\nNOTE: If you choose \'Randomise...\' in the menu for one of the fields it will only affect that colour channel.\n\nThis creates a new attribute (which you can verify in the Scene Inspector), but with a single color shared across all locations. In order to make it vary, we need to tell the Node to change its value based on the location path.\n\nTo do this, we make use of the Random node\'s \'Context Entry\' plug. This tells the node to generate a new random value whenever some part of the context changes. If you\'re not familiar with the concept of the Gaffer context, in a nutshell it contains information about which location and frame is currently being computed. \n\nHere, we set the Context Entry plug to "scene:path" which results in the node generating a new random colour for each location in the scene - as they all have different paths.\n\nIf you now look in the Scene Inspector, you should see each cow has a different colour in its \'user:colorVariation\' attribute.' )
__children["Backdrop4"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -37.5400391 ), imath.V2f( 48.2769547, 9.48580933 ) ) )
__children["Backdrop4"]["__uiPosition"].setValue( imath.V2f( -112.693184, 37.8769875 ) )
Gaffer.Metadata.registerValue( __children["Backdrop5"], 'nodeGadget:color', imath.Color3f( 0.400000006, 0.360000014, 0.360000014 ) )
__children["Backdrop5"]["title"].setValue( 'Debugging' )
__children["Backdrop5"]["description"].setValue( 'You can use the AttributeVisualiser node to see the per-location values directly in the Viewport!' )
__children["Backdrop5"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 7.30519485, -5.54041862 ), imath.V2f( 31.8014202, 10.5616188 ) ) )
__children["Backdrop5"]["__uiPosition"].setValue( imath.V2f( -25.7214622, -17.3105278 ) )
__children["Scene"]["Cow_Field"]["Expression"]["__engine"].setValue( 'python' )
__children["Scene"]["Cow_Field"]["Expression"]["__expression"].setValue( 'import imath\n\nparent["__out"]["p0"] = parent["__in"]["p0"]' )


del __children

