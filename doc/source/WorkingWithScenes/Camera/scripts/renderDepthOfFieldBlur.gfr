import Gaffer
import GafferAppleseed
import GafferDispatch
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 53, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "imageCataloguePort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'image:catalogue:port', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:name', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:rootDirectory', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"] = GafferScene.Outputs( "Outputs" )
parent.addChild( __children["Outputs"] )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "quantize", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"]["parameters"]["quantize"].addChild( Gaffer.StringPlug( "name", defaultValue = 'quantize', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"]["parameters"]["quantize"].addChild( Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AppleseedOptions"] = GafferAppleseed.AppleseedOptions( "AppleseedOptions" )
parent.addChild( __children["AppleseedOptions"] )
__children["AppleseedOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"] = Gaffer.Box( "Spheres" )
parent.addChild( __children["Spheres"] )
__children["Spheres"].addChild( GafferScene.Sphere( "Sphere" ) )
__children["Spheres"]["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment" ) )
__children["Spheres"]["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferOSL.OSLShader( "as_disney_material" ) )
__children["Spheres"]["as_disney_material"].loadShader( "material/as_disney_material" )
__children["Spheres"]["as_disney_material"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.PathFilter( "PathFilter" ) )
__children["Spheres"]["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Spheres"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Spheres"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.Sphere( "Sphere1" ) )
__children["Spheres"]["Sphere1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment1" ) )
__children["Spheres"]["ShaderAssignment1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferOSL.OSLShader( "as_disney_material1" ) )
__children["Spheres"]["as_disney_material1"].loadShader( "material/as_disney_material" )
__children["Spheres"]["as_disney_material1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.PathFilter( "PathFilter1" ) )
__children["Spheres"]["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.Sphere( "Sphere2" ) )
__children["Spheres"]["Sphere2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment2" ) )
__children["Spheres"]["ShaderAssignment2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferOSL.OSLShader( "as_disney_material2" ) )
__children["Spheres"]["as_disney_material2"].loadShader( "material/as_disney_material" )
__children["Spheres"]["as_disney_material2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.PathFilter( "PathFilter2" ) )
__children["Spheres"]["PathFilter2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.Group( "Group" ) )
__children["Spheres"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"]["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"] = Gaffer.Box( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( GafferScene.Plane( "Plane" ) )
__children["Plane"]["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment1" ) )
__children["Plane"]["ShaderAssignment1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"].addChild( GafferScene.PathFilter( "PathFilter1" ) )
__children["Plane"]["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"].addChild( GafferOSL.OSLShader( "as_disney_material1" ) )
__children["Plane"]["as_disney_material1"].loadShader( "material/as_disney_material" )
__children["Plane"]["as_disney_material1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Plane"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Plane"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"].addChild( GafferScene.StandardAttributes( "StandardAttributes" ) )
__children["Plane"]["StandardAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"].addChild( GafferScene.PathFilter( "PathFilter" ) )
__children["Plane"]["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AppleseedRender"] = GafferAppleseed.AppleseedRender( "AppleseedRender" )
parent.addChild( __children["AppleseedRender"] )
__children["AppleseedRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["point_light"] = GafferAppleseed.AppleseedLight( "point_light" )
parent.addChild( __children["point_light"] )
__children["point_light"].loadShader( "point_light" )
__children["point_light"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["point_light1"] = GafferAppleseed.AppleseedLight( "point_light1" )
parent.addChild( __children["point_light1"] )
__children["point_light1"].loadShader( "point_light" )
__children["point_light1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Text"] = GafferImage.Text( "Text" )
parent.addChild( __children["Text"] )
__children["Text"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 46033 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Camera"]["transform"]["translate"].setValue( imath.V3f( 0, 0, -2 ) )
__children["Camera"]["perspectiveMode"].setValue( 1 )
__children["Camera"]["fieldOfView"].setValue( 90.0 )
__children["Camera"]["focalLength"].setValue( 17.0 )
__children["Camera"]["orthographicAperture"].setValue( imath.V2f( 10, 10 ) )
__children["Camera"]["fStop"].setValue( 1.0 )
__children["Camera"]["focusDistance"].setValue( 13.0 )
__children["Camera"]["__uiPosition"].setValue( imath.V2f( 34.7851639, 6.29177904 ) )
__children["StandardOptions"]["in"].setInput( __children["Group"]["out"] )
__children["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/group/camera' )
__children["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["renderResolution"]["value"].setValue( imath.V2i( 400, 300 ) )
__children["StandardOptions"]["options"]["renderResolution"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["depthOfField"]["value"].setValue( True )
__children["StandardOptions"]["options"]["depthOfField"]["enabled"].setValue( True )
__children["StandardOptions"]["__uiPosition"].setValue( imath.V2f( -3.12300348, -7.53634548 ) )
__children["Group"]["in"]["in0"].setInput( __children["Spheres"]["out"] )
__children["Group"]["in"]["in1"].setInput( __children["Plane"]["out"] )
__children["Group"]["in"]["in2"].setInput( __children["point_light"]["out"] )
__children["Group"]["in"]["in3"].setInput( __children["point_light1"]["out"] )
__children["Group"]["in"]["in4"].setInput( __children["Camera"]["out"] )
__children["Group"]["__uiPosition"].setValue( imath.V2f( -3.12300348, -1.87228346 ) )
__children["Outputs"]["in"].setInput( __children["AppleseedOptions"]["out"] )
__children["Outputs"]["outputs"]["output2"]["name"].setValue( 'Batch/Beauty' )
__children["Outputs"]["outputs"]["output2"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/beauty/beauty.####.exr' )
__children["Outputs"]["outputs"]["output2"]["type"].setValue( 'png' )
__children["Outputs"]["outputs"]["output2"]["data"].setValue( 'rgba' )
__children["Outputs"]["__uiPosition"].setValue( imath.V2f( -3.12300348, -18.86446 ) )
__children["AppleseedOptions"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["AppleseedOptions"]["options"]["renderPasses"]["value"].setValue( 2 )
__children["AppleseedOptions"]["options"]["renderPasses"]["enabled"].setValue( True )
__children["AppleseedOptions"]["options"]["aaSamples"]["value"].setValue( 32 )
__children["AppleseedOptions"]["options"]["aaSamples"]["enabled"].setValue( True )
__children["AppleseedOptions"]["__uiPosition"].setValue( imath.V2f( -3.12300205, -13.2003975 ) )
__children["Spheres"]["Sphere"]["transform"]["translate"].setValue( imath.V3f( 0, 12, -25 ) )
__children["Spheres"]["Sphere"]["__uiPosition"].setValue( imath.V2f( -32.4865303, 14.4558401 ) )
__children["Spheres"]["ShaderAssignment"]["in"].setInput( __children["Spheres"]["Sphere"]["out"] )
__children["Spheres"]["ShaderAssignment"]["filter"].setInput( __children["Spheres"]["PathFilter"]["out"] )
__children["Spheres"]["ShaderAssignment"]["shader"].setInput( __children["Spheres"]["as_disney_material"]["out"] )
__children["Spheres"]["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( -32.4865303, 6.29177904 ) )
__children["Spheres"]["as_disney_material"]["parameters"]["BaseColor"].setValue( imath.Color3f( 0.5, 0.075000003, 0.075000003 ) )
__children["Spheres"]["as_disney_material"]["parameters"]["Specular"].setValue( 1.0 )
__children["Spheres"]["as_disney_material"]["parameters"]["Roughness"].setValue( 1.0 )
__children["Spheres"]["as_disney_material"]["__uiPosition"].setValue( imath.V2f( -47.5414619, 6.29177856 ) )
__children["Spheres"]["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["Spheres"]["PathFilter"]["__uiPosition"].setValue( imath.V2f( -19.8187637, 10.3013992 ) )
__children["Spheres"]["out"].setInput( __children["Spheres"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Spheres"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Spheres"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Spheres"]["out"], 'description', 'The processed output scene.' )
__children["Spheres"]["BoxOut"]["in"].setInput( __children["Spheres"]["Group"]["out"] )
Gaffer.Metadata.registerValue( __children["Spheres"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Spheres"]["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["Spheres"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Spheres"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["Spheres"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 17.8290253, -59.076088 ) )
__children["Spheres"]["__uiPosition"].setValue( imath.V2f( -20.6184673, 6.45974779 ) )
__children["Spheres"]["Sphere1"]["transform"]["translate"].setValue( imath.V3f( 0, 1, -15 ) )
__children["Spheres"]["Sphere1"]["__uiPosition"].setValue( imath.V2f( 20.7019711, 16.9874611 ) )
__children["Spheres"]["ShaderAssignment1"]["in"].setInput( __children["Spheres"]["Sphere1"]["out"] )
__children["Spheres"]["ShaderAssignment1"]["filter"].setInput( __children["Spheres"]["PathFilter1"]["out"] )
__children["Spheres"]["ShaderAssignment1"]["shader"].setInput( __children["Spheres"]["as_disney_material1"]["out"] )
__children["Spheres"]["ShaderAssignment1"]["__uiPosition"].setValue( imath.V2f( 20.7019711, 8.8234005 ) )
__children["Spheres"]["as_disney_material1"]["parameters"]["BaseColor"].setValue( imath.Color3f( 0.075000003, 0.5, 0.075000003 ) )
__children["Spheres"]["as_disney_material1"]["parameters"]["Specular"].setValue( 1.0 )
__children["Spheres"]["as_disney_material1"]["parameters"]["Roughness"].setValue( 1.0 )
__children["Spheres"]["as_disney_material1"]["__uiPosition"].setValue( imath.V2f( 4.96661949, 8.8234005 ) )
__children["Spheres"]["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["Spheres"]["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 33.3697395, 12.8330212 ) )
__children["Spheres"]["Sphere2"]["transform"]["translate"].setValue( imath.V3f( 0, -3.5, -10 ) )
__children["Spheres"]["Sphere2"]["__uiPosition"].setValue( imath.V2f( 75.4692917, 16.2288857 ) )
__children["Spheres"]["ShaderAssignment2"]["in"].setInput( __children["Spheres"]["Sphere2"]["out"] )
__children["Spheres"]["ShaderAssignment2"]["filter"].setInput( __children["Spheres"]["PathFilter2"]["out"] )
__children["Spheres"]["ShaderAssignment2"]["shader"].setInput( __children["Spheres"]["as_disney_material2"]["out"] )
__children["Spheres"]["ShaderAssignment2"]["__uiPosition"].setValue( imath.V2f( 75.4692917, 8.06482315 ) )
__children["Spheres"]["as_disney_material2"]["parameters"]["BaseColor"].setValue( imath.Color3f( 0.075000003, 0.075000003, 0.5 ) )
__children["Spheres"]["as_disney_material2"]["parameters"]["Specular"].setValue( 1.0 )
__children["Spheres"]["as_disney_material2"]["parameters"]["Roughness"].setValue( 1.0 )
__children["Spheres"]["as_disney_material2"]["__uiPosition"].setValue( imath.V2f( 59.7520065, 8.06482315 ) )
__children["Spheres"]["PathFilter2"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["Spheres"]["PathFilter2"]["__uiPosition"].setValue( imath.V2f( 88.1370468, 12.0744429 ) )
__children["Spheres"]["Group"]["in"]["in0"].setInput( __children["Spheres"]["ShaderAssignment"]["out"] )
__children["Spheres"]["Group"]["in"]["in1"].setInput( __children["Spheres"]["ShaderAssignment1"]["out"] )
__children["Spheres"]["Group"]["in"]["in2"].setInput( __children["Spheres"]["ShaderAssignment2"]["out"] )
__children["Spheres"]["Group"]["__uiPosition"].setValue( imath.V2f( 16.3290253, -43.5147095 ) )
__children["Plane"]["Plane"]["transform"]["translate"].setValue( imath.V3f( 0, 0, -30 ) )
__children["Plane"]["Plane"]["dimensions"].setValue( imath.V2f( 125, 125 ) )
__children["Plane"]["Plane"]["__uiPosition"].setValue( imath.V2f( -6.12300348, 32.7530403 ) )
__children["Plane"]["ShaderAssignment1"]["in"].setInput( __children["Plane"]["Plane"]["out"] )
__children["Plane"]["ShaderAssignment1"]["filter"].setInput( __children["Plane"]["PathFilter1"]["out"] )
__children["Plane"]["ShaderAssignment1"]["shader"].setInput( __children["Plane"]["as_disney_material1"]["out"] )
__children["Plane"]["ShaderAssignment1"]["__uiPosition"].setValue( imath.V2f( -6.12300348, 24.5889797 ) )
__children["Plane"]["out"].setInput( __children["Plane"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Plane"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Plane"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Plane"]["out"], 'description', 'The processed output scene.' )
__children["Plane"]["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/plane' ] ) )
__children["Plane"]["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 8.47416496, 30.671011 ) )
__children["Plane"]["as_disney_material1"]["parameters"]["BaseColor"].setValue( imath.Color3f( 0.075000003, 0.075000003, 0.075000003 ) )
__children["Plane"]["as_disney_material1"]["parameters"]["Subsurface"].setValue( 1.0 )
__children["Plane"]["as_disney_material1"]["__uiPosition"].setValue( imath.V2f( -21.8583546, 24.5889797 ) )
__children["Plane"]["BoxOut"]["in"].setInput( __children["Plane"]["StandardAttributes"]["out"] )
Gaffer.Metadata.registerValue( __children["Plane"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Plane"]["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["Plane"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Plane"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["Plane"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -4.62300396, 0.656945229 ) )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( -6.12300348, 6.45974731 ) )
__children["Plane"]["StandardAttributes"]["in"].setInput( __children["Plane"]["ShaderAssignment1"]["out"] )
__children["Plane"]["StandardAttributes"]["filter"].setInput( __children["Plane"]["PathFilter"]["out"] )
__children["Plane"]["StandardAttributes"]["attributes"]["linkedLights"]["value"].setValue( 'sun' )
__children["Plane"]["StandardAttributes"]["attributes"]["linkedLights"]["enabled"].setValue( True )
__children["Plane"]["StandardAttributes"]["__uiPosition"].setValue( imath.V2f( -6.12271929, 12.7073421 ) )
__children["Plane"]["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/plane' ] ) )
__children["Plane"]["PathFilter"]["__uiPosition"].setValue( imath.V2f( 8.47416401, 18.7893734 ) )
__children["AppleseedRender"]["in"].setInput( __children["Outputs"]["out"] )
__children["AppleseedRender"]["fileName"].setValue( '${project:rootDirectory}/appleseeds/${script:name}/${script:name}.####.appleseed' )
__children["AppleseedRender"]["__uiPosition"].setValue( imath.V2f( -4.62300301, -24.5285225 ) )
__children["point_light"]["transform"]["translate"].setValue( imath.V3f( -40, 40, 40 ) )
__children["point_light"]["parameters"]["exposure"].setValue( 15.0 )
__children["point_light"]["__uiPosition"].setValue( imath.V2f( 9.92286491, 6.29177904 ) )
__children["point_light1"]["transform"]["translate"].setValue( imath.V3f( 40, -40, 15 ) )
__children["point_light1"]["parameters"]["exposure"].setValue( 12.0 )
__children["point_light1"]["__uiPosition"].setValue( imath.V2f( 22.9937744, 6.29177856 ) )
__children["Text"]["out"].setInput( __children["Text"]["__merge"]["out"] )
__children["Text"]["text"].setValue( '${USER}\n' )
__children["Text"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 1920, 1080 ) ) )
__children["Text"]["__uiPosition"].setValue( imath.V2f( -78.2757568, 1.0391531 ) )


del __children

