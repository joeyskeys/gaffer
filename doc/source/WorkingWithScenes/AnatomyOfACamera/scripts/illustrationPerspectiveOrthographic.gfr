import Gaffer
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerNodeValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:majorVersion", 52, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:minorVersion", 1, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "imageCataloguePort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'image:catalogue:port', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:name', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:rootDirectory', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Camera2"] = GafferScene.Camera( "Camera2" )
parent.addChild( __children["Camera2"] )
__children["Camera2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Camera1"] = GafferScene.Camera( "Camera1" )
parent.addChild( __children["Camera1"] )
__children["Camera1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch"] = Gaffer.Switch( "Switch" )
parent.addChild( __children["Switch"] )
__children["Switch"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch"].addChild( Gaffer.ArrayPlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch"]["in"].addChild( GafferScene.ScenePlug( "in0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Sphere"] = GafferScene.Sphere( "Sphere" )
parent.addChild( __children["Sphere"] )
__children["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cube"] = GafferScene.Cube( "Cube" )
parent.addChild( __children["Cube"] )
__children["Cube"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Camera3"] = GafferScene.Camera( "Camera3" )
parent.addChild( __children["Camera3"] )
__children["Camera3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 33464 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Camera"]["perspectiveMode"].setValue( 1 )
__children["Camera"]["apertureOffset"]["x"].setValue( 10.0 )
__children["Camera"]["apertureOffset"]["y"].setInput( __children["Camera"]["apertureOffset"]["x"] )
__children["Camera"]["__uiPosition"].setValue( imath.V2f( -8.92513084, 7.49806833 ) )
__children["Camera2"]["enabled"].setValue( False )
__children["Camera2"]["transform"]["translate"].setValue( imath.V3f( 10, 3, 2 ) )
__children["Camera2"]["transform"]["rotate"].setValue( imath.V3f( 8.65142192e-06, 60, 8.65142192e-06 ) )
__children["Camera2"]["fieldOfView"].setValue( 85.0 )
__children["Camera2"]["orthographicAperture"].setValue( imath.V2f( 16, 16 ) )
__children["Camera2"]["renderSettingOverrides"]["resolution"]["value"].setValue( imath.V2i( 2048, 1024 ) )
__children["Camera2"]["__uiPosition"].setValue( imath.V2f( 12.0749302, -0.664534092 ) )
__children["Group"]["in"]["in0"].setInput( __children["Switch"]["out"] )
__children["Group"]["in"]["in1"].setInput( __children["Camera2"]["out"] )
__children["Group"]["in"]["in2"].setInput( __children["Cube"]["out"] )
__children["Group"]["in"]["in3"].setInput( __children["Sphere"]["out"] )
__children["Group"]["in"]["in4"].setInput( __children["Camera3"]["out"] )
__children["Group"]["__uiPosition"].setValue( imath.V2f( 8.57496643, -17.8300571 ) )
__children["Camera1"]["projection"].setValue( 'orthographic' )
__children["Camera1"]["orthographicAperture"].setValue( imath.V2f( 5, 3.75 ) )
__children["Camera1"]["__uiPosition"].setValue( imath.V2f( 4.07486963, 7.49806452 ) )
__children["Switch"]["__uiPosition"].setValue( imath.V2f( -0.925070107, -0.665997565 ) )
Gaffer.Metadata.registerValue( __children["Switch"]["in"], 'noduleLayout:section', 'top' )
__children["Switch"]["in"]["in0"].setInput( __children["Camera"]["out"] )
Gaffer.Metadata.registerValue( __children["Switch"]["in"]["in0"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
__children["Switch"]["in"]["in1"].setInput( __children["Camera1"]["out"] )
Gaffer.Metadata.registerValue( __children["Switch"]["in"]["in1"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Switch"]["in"]["in2"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
__children["Switch"]["out"].setInput( __children["Switch"]["in"]["in0"] )
Gaffer.Metadata.registerValue( __children["Switch"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Switch"]["out"], 'noduleLayout:section', 'bottom' )
__children["Sphere"]["transform"]["translate"].setValue( imath.V3f( 1, -1, -17 ) )
__children["Sphere"]["type"].setValue( 0 )
__children["Sphere"]["radius"].setValue( 0.5 )
__children["Sphere"]["__uiPosition"].setValue( imath.V2f( 47.0185165, -9.66599464 ) )
__children["Cube"]["transform"]["translate"].setValue( imath.V3f( -1, 1, -13 ) )
__children["Cube"]["transform"]["rotate"].setValue( imath.V3f( 45, 15, 0 ) )
__children["Cube"]["__uiPosition"].setValue( imath.V2f( 35.120163, -9.66599464 ) )
__children["Camera3"]["transform"]["translate"].setValue( imath.V3f( 0, 10, 10 ) )
__children["Camera3"]["transform"]["rotate"].setValue( imath.V3f( -35, 0, 1.06721711e-06 ) )
__children["Camera3"]["__uiPosition"].setValue( imath.V2f( 59.3265648, -9.66599464 ) )


del __children

