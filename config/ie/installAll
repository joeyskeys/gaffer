#!/usr/bin/env iePython2.7

import IEEnv
import os, sys, subprocess

def build( extraArgs = [] ) :
	
	buildArgs = [ "scons" ]
	buildArgs.append( "install" if "RELEASE=1" in sys.argv[1:] else "build" )
	buildArgs.extend( extraArgs )
	buildArgs.extend( sys.argv[1:] )
	
	print " ".join( buildArgs )
	if subprocess.call( buildArgs ) != 0 :
	
		raise RuntimeError( "Error : " + " ".join( buildArgs ) )

platform = IEEnv.platform()
if platform in ( "cent7.x86_64" ) :

	# fetch at least one active version of each renderer
	aiVersion = IEEnv.activeVersions( IEEnv.registry["apps"]["arnold"], minimumVersion="5.2.2.1" )[-1]
	dlVersion = ( IEEnv.activeVersions( IEEnv.registry["apps"]["3delight"] ) or [ "UNDEFINED" ] )[-1]

	extraArgs = [ "ARNOLD_VERSION="+aiVersion, "DL_VERSION="+dlVersion ]

	# find a specific appleseed version per compiler
	compilerVersions = IEEnv.activeVersions( IEEnv.registry["compilers"]["gcc"] )
	appleseedVersions = IEEnv.activeVersions( IEEnv.registry["apps"]["appleseed"] )
	appleseedCompilerMap = { x : [] for x in compilerVersions }
	for appleseedVersion in appleseedVersions :
		compilerVersion = IEEnv.registry["apps"]["appleseed"][appleseedVersion][platform]["compilerVersion"]
		appleseedCompilerMap[compilerVersion].append( appleseedVersion )

	# standalone build
	compilerVersion = IEEnv.registry["platformDefaults"][platform]["compilerVersion"]
	appleseedVersion = appleseedCompilerMap[compilerVersion][-1]
	build( [ "COMPILER_VERSION=" + compilerVersion, "APPLESEED_VERSION="+appleseedVersion ] + extraArgs )

	# app specific builds
	for app, minimumVersion in (
		( "maya", None ),
		( "houdini", "16.5.268" ),
		( "nuke", None )
	) :
		for appVersion in IEEnv.activeAppVersions( app, minimumVersion=minimumVersion ) :
			compilerVersion = IEEnv.registry["apps"][app][appVersion][platform]["compilerVersion"]
			appleseedVersion = appleseedCompilerMap.get( compilerVersion, appleseedVersions )[-1]
			build( [ "APP=" + app, "APP_VERSION=" + appVersion, "APPLESEED_VERSION="+appleseedVersion ] + extraArgs )
			
else :

	raise RuntimeError( "Unknown platform" )
